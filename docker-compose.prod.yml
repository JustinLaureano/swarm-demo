services:
    # Laravel Application (PHP-FPM)
    app:
        image: your-laravel-app-image:latest
        deploy:
            replicas: 3
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
        environment:
            - APP_ENV=production
            - APP_KEY=your-app-key
            - APP_DEBUG=false
            - APP_URL=http://your-domain.com
            - DB_HOST=db
            - DB_PORT=3306
            - DB_DATABASE=your-database
            - DB_USERNAME=your-username
            - DB_PASSWORD=your-password
            - REDIS_HOST=redis
            - REDIS_PASSWORD=null
            - REDIS_PORT=6379
        volumes:
            - ./src:/var/www/html
        networks:
            - app-network

    # Nginx Service
    web:
        image: nginx:latest
        deploy:
            replicas: 3
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./src:/var/www/html
            - /etc/letsencrypt:/etc/letsencrypt # For SSL certificates
        networks:
            - app-network

    # MySQL Service
    db:
        image: mysql:8.0
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            MYSQL_ROOT_PASSWORD: your-root-password
            MYSQL_DATABASE: your-database
            MYSQL_USER: your-username
            MYSQL_PASSWORD: your-password
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - app-network

    # Redis Service
    redis:
        image: redis:7.0
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        command: [ "redis-server", "--appendonly", "yes" ]
        volumes:
            - redis-data:/data
        networks:
            - app-network

networks:
    app-network:
        driver: overlay

volumes:
    db-data:
    redis-data:
